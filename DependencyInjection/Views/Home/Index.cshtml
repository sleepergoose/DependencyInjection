
@{
    Layout = "~/Views/_Layout.cshtml";

}
@model IEnumerable<DependencyInjection.Models.ViewModels.ViewEmployee>

<div class="container">
    <table class="table table-stripped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Birth Date</th>
                <th>Tax Code</th>
                <th>Current Rate</th>
                <th>Employment Date</th>
                <th>Fire Date</th>
            </tr>
        </thead>
        @{
            foreach (var item in Model)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>
                        @Ajax.ActionLink(item.Name,
                       "Details", "Home",
                       new { id = @item.Id },
                       new AjaxOptions { UpdateTargetId = "goal", InsertionMode = InsertionMode.InsertAfter },
                       new { @class = "nav-link p-0 m-0" })
                    </td>
                    <td>@item.BirthDate.ToShortDateString()</td>
                    <td>@item.TaxCode</td>
                    <td>@item.CurrentRate</td>
                    <td>@item.EmploymentDate.ToShortDateString()</td>
                    <td>
                        @{
                           var res = item.FireDate.HasValue ? item.FireDate.Value.ToShortDateString() :  "Employee still works";
                           @res.ToString();
                         }
                    </td>
                </tr>
                            }
        }

    </table>



    <div class="container text-center d-inline-flex" id="goal">

    </div>
 </div>

